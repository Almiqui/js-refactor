{
  "name": "jsrefactor",
  "displayName": "JS Refactorings",
  "description": "JS refactoring tools for adding efficiency to your development workflow.",
  "version": "0.2.1",
  "publisher": "cmstead",
  "repository": {
    "url": "https://github.com/cmstead/js-refactor.git",
    "type": "git"
  },
  "author": {
    "name": "Chris Stead"
  },
  "engines": {
    "vscode": "^0.10.1"
  },
  "categories": [
    "Other",
    "Languages",
    "Snippets"
  ],
  "activationEvents": [
    "onCommand:cmstead.jsRefactor.convertToMemberFunction",
    "onCommand:cmstead.jsRefactor.convertToNamedFunction",
    "onCommand:cmstead.jsRefactor.wrapInExecutedFunction",
    "onCommand:cmstead.jsRefactor.wrapInFunction",
    "onCommand:cmstead.jsRefactor.wrapInIIFE",
    "onCommand:cmstead.jsRefactor.wrapInCondition"
  ],
  "main": "./extension",
  "scripts": {
    "test": "node ./node_modules/mocha/bin/mocha --recursive ./test/",
    "build": "tfx extension create --manifest-globs vss-integration.json"
  },
  "tags": [
    "Javascript",
    "ECMAScript",
    "Refactoring"
  ],
  "screenshots": [
    {
      "path": "images/extract-to-function-result.png"
    },
    {
      "path": "images/fn-snippet-menu-option.png"
    },
    {
      "path": "images/fn-result-with-anon-menu-option.png"
    }
  ],
  "contributes": {
    "languages": [
      {
        "id": "javascript",
        "extensions": [
          ".js"
        ],
        "aliases": [
          "JS"
        ]
      }
    ],
    "snippets": [
      {
        "language": "javascript",
        "path": "./snippets/javascript.json"
      }
    ],
    "commands": [
      {
        "command": "cmstead.jsRefactor.convertToMemberFunction",
        "title": "Convert To Member Function",
        "description": "Convert function from a named function to a prototype member function"
      },
      {
        "command": "cmstead.jsRefactor.convertToNamedFunction",
        "title": "Convert To Named Function",
        "description": "Convert function from an assigned anonymous function to a fully qualified named function"
      },
      {
        "command": "cmstead.jsRefactor.wrapInExecutedFunction",
        "title": "Wrap In Executed Function",
        "description": "Wrap code in a named function and execute it immediately"
      },
      {
        "command": "cmstead.jsRefactor.wrapInFunction",
        "title": "Wrap In Function",
        "description": "Wrap code in a named function"
      },
      {
        "command": "cmstead.jsRefactor.wrapInIIFE",
        "title": "Wrap In IIFE",
        "description": "Wrap code in an immediately invoked function expression"
      },
      {
        "command": "cmstead.jsRefactor.wrapInCondition",
        "title": "Wrap In Condition",
        "description": "Wrap code in a condition block"
      }
    ]
  },
  "devDependencies": {
    "chai": "^3.4.1",
    "mocha": "^2.3.4",
    "mockery": "^1.4.0",
    "sinon": "^1.17.2",
    "vscode": "0.10.x"
  },
  "links": {
    "getstarted": {
      "uri": "https://github.com/cmstead/js-refactor/blob/master/README.md"
    },
    "support": {
      "uri": "https://github.com/cmstead/js-refactor/issues"
    }
  },
  "icon": "images/js-refactor-icon.png",
  "galleryBanner": {
    "color": "#ffffee"
  },
  "public": true,
  "dependencies": {
    "esprima": "^2.7.1"
  }
}
